name: Publish Package to npmjs
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish:
        description: "Publish to NPM"
        required: false
        type: boolean
      vulkan:
        description: "Build a Vulkan Binary"
        required: false
        type: boolean
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - if: ${{contains(matrix.os, 'windows')}}
        uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: amd64
      - uses: lukka/get-cmake@v3.30.0
      - if: ${{contains(matrix.os, 'ubuntu')}}
        uses: awalsh128/cache-apt-pkgs-action@v1.4.2
        with:
          packages: libc6-dev
      - name: Install CUDA (Linux)
        env:
          cuda: "12.5.1"
        if: ${{contains(matrix.os, 'ubuntu') && !inputs.vulkan}}
        run: ./cuda-cmake-github-actions/scripts/actions/install_cuda_ubuntu.sh
        shell: bash
      - name: Install CUDA (Windows)
        env:
          cuda: "12.5.1"
          visual_studio: "Visual Studio 17 2022"
        if: ${{contains(matrix.os, 'windows') && !inputs.vulkan}}
        run: ./cuda-cmake-github-actions/scripts/actions/install_cuda_windows.ps1
        shell: powershell
      - uses:  humbletim/install-vulkan-sdk@c2aa128094d42ba02959a660f03e0a4e012192f9
        if: ${{ inputs.vulkan }}
        with:
          version: 1.3.296.0
          cache: true
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm ci
      - run: npm run pkg-prebuilds-copy
      - uses: actions/upload-artifact@v4
        with:
          name: node-addon-binary-${{ matrix.os }}
          path: prebuilds/
          retention-days: 1

  publish:
    needs:
      - build
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      id-token: write
    environment: "NPM Publish"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
      - uses: actions/download-artifact@v4
        with:
          pattern: node-addon-binary-*
          path: prebuilds
          merge-multiple: true
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: node-addon-binary-*
      - run: npm ci
      - run: npm publish --provenance --access public
        if: ${{ github.event_name != 'workflow_dispatch' || inputs.publish }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm pack
      - uses: actions/upload-artifact@v4
        if: github.event_name != 'release'
        with:
          name: lmagder-node-stable-diffusion-cpp
          path: lmagder-node-stable-diffusion-cpp-*.tgz
      - run: gh release upload ${{github.event.release.tag_name}} lmagder-node-stable-diffusion-cpp-*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'release'
